{"version":3,"sources":["types/types.tsx","state.ts","util/GameStateProvider2.ts","components/LetterSelectComponent.tsx","components/LetterTileComponent.tsx","components/PlayerInfoComponent.tsx","components/WordBoardComponent.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["LetterRevealState","BE_URL","letterPoints","useGameState","useState","sentence","playerStates","name","points","currentSentence","turnOfPlayer","letterRevealState","createDummyGameState","gameState","setGameState","getNextSentence","text","textArea","document","createElement","innerHTML","value","decodeHTMLEntities","replace","toLocaleUpperCase","updateGameState","newLetterRevealState","newPlayerStates","copyGameState","sendGameStateToBE","state","a","axios","post","game","resp","data","fetchGameStateFromBe","useCallback","get","then","useEffect","client","W3CWebSocket","onopen","onmessage","message","newGameState","JSON","parse","isLetterAtIndexRevealed","idx","UNREVEALED","revealLetters","character","i","length","REVEALED_LAST_TURN","REVEALED","revealLettersPrivate","isSpecialLetter","letter","match","revealWord","word","clearLastTurnReveal","indexOf","totalPoints","LetterSelectComponent","props","selectedWord","setSelectedWord","LetterSelectMainDiv","HorizontalLayout","WordInput","onInput","event","target","toUpperCase","Button","onClick","styled","div","textarea","button","LetterTileComponent","borderstyle","isLastRevealed","border","style","background","className","PlayerInfo","setPoints","newPoints","FlexDivRow","PlayerContainer","PlayerNameDiv","NewPointsDiv","WordBoardComponent","getLetterAt","getIsLastRevealed","MainDiv","LetterContainer","Array","from","map","isRevealed","playerState","isActive","h2","input","p","App","isUserLoggedIn","setIsUserLoggedIn","cookie","response","status","console","log","isLoggedIn","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.515e3db2.chunk.js","sourcesContent":["export const letterPoints: Record<string, number> = {};\r\nletterPoints[\"A\"] = 1;\r\nletterPoints[\"B\"] = 10;\r\nletterPoints[\"C\"] = 10;\r\nletterPoints[\"D\"] = 7;\r\nletterPoints[\"E\"] = 2;\r\nletterPoints[\"F\"] = 8;\r\nletterPoints[\"G\"] = 4;\r\nletterPoints[\"H\"] = 3;\r\nletterPoints[\"I\"] = 2;\r\nletterPoints[\"J\"] = 3;\r\nletterPoints[\"K\"] = 3;\r\nletterPoints[\"L\"] = 3;\r\nletterPoints[\"M\"] = 2;\r\nletterPoints[\"N\"] = 2;\r\nletterPoints[\"O\"] = 2;\r\nletterPoints[\"P\"] = 4;\r\nletterPoints[\"Q\"] = 10;\r\nletterPoints[\"R\"] = 4;\r\nletterPoints[\"S\"] = 3;\r\nletterPoints[\"T\"] = 3;\r\nletterPoints[\"U\"] = 5;\r\nletterPoints[\"V\"] = 5;\r\nletterPoints[\"X\"] = 10;\r\nletterPoints[\"Y\"] = 3;\r\nletterPoints[\"Z\"] = 10;\r\n\r\nexport enum LetterRevealState {\r\n    UNREVEALED = 0,\r\n    REVEALED = 1,\r\n    REVEALED_LAST_TURN = 2\r\n}\r\n\r\nexport type PlayerState = {\r\n    name: string;\r\n    points: number;\r\n}\r\n\r\nexport type GameState = {\r\n    letterRevealState: LetterRevealState[];\r\n    playerStates : PlayerState[];\r\n    turnOfPlayer: string;\r\n    currentSentence: string;\r\n}\r\n\r\nexport const copyGameState = (gameState : GameState) => {\r\n    const letterRevealState = [...gameState.letterRevealState];\r\n    const playerStates = [...gameState.playerStates];\r\n    return {\r\n        letterRevealState,\r\n        playerStates,\r\n        turnOfPlayer: gameState.turnOfPlayer,\r\n        currentSentence: gameState.currentSentence\r\n    };\r\n}\r\n\r\nexport const createDummyGameState = (sentence: string) => {\r\n\r\n    const playerStates = [\r\n        {name: \"\", points: 0},\r\n        {name: \"\", points: 0}\r\n    ];\r\n\r\n    return {\r\n        currentSentence: sentence,\r\n        playerStates,\r\n        turnOfPlayer : playerStates[0].name,\r\n        letterRevealState : []\r\n    };\r\n}","import { useState } from \"react\";\r\n\r\nconst BE_IP = \"localhost\";\r\n\r\nexport const BE_URL = \"http://\"+BE_IP+\":5000\";\r\n\r\nexport const BE_WS_URL = \"ws://\"+BE_IP+\":8999\";","import axios from \"axios\";\r\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { BE_URL, BE_WS_URL } from \"../state\";\r\nimport { letterPoints, LetterRevealState, PlayerState, GameState, copyGameState, createDummyGameState } from \"../types/types\";\r\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\r\n\r\nfunction decodeHTMLEntities(text) {\r\n    var textArea = document.createElement('textarea');\r\n    textArea.innerHTML = text;\r\n    return textArea.value;\r\n}\r\n\r\nexport const useGameState = () => {\r\n\r\n    const [gameState, setGameState ] = useState<GameState>(createDummyGameState(\"\"));\r\n\r\n    const getNextSentence = () => {\r\n        const sentence = decodeHTMLEntities(\"Ylen kysely kan­san­edus­ta­jil­le: Suuri enemmistö vastaajista kannattaa järeämpien aitojen rakentamista itärajalle\".replace(/\\u00ad/g, '').toLocaleUpperCase());\r\n        return sentence;\r\n    }\r\n\r\n    const [currentSentence, setCurrentSentence] = useState(getNextSentence());\r\n\r\n    const isLetterAtIndexRevealed = (idx: number) => {\r\n        return gameState.letterRevealState[idx] > LetterRevealState.UNREVEALED;\r\n    }\r\n\r\n    const clearLastTurnReveal = (newLetterRevealState) => {\r\n        for (let i = 0; i < currentSentence.length; i++)\r\n            if (gameState.letterRevealState[i] === LetterRevealState.REVEALED_LAST_TURN)\r\n                newLetterRevealState[i] = LetterRevealState.REVEALED;\r\n        return newLetterRevealState;\r\n    }\r\n\r\n    const revealLettersPrivate = (character: string, newLetterRevealState) => {\r\n        let points = 0;\r\n\r\n        for (let i = 0; i < currentSentence.length; i++) {\r\n            if (currentSentence[i] === character) {\r\n                newLetterRevealState[i] = LetterRevealState.REVEALED_LAST_TURN;\r\n                points += letterPoints[character];\r\n            }\r\n            else if (gameState.letterRevealState[i] === LetterRevealState.REVEALED_LAST_TURN)\r\n                newLetterRevealState[i] = LetterRevealState.REVEALED\r\n        }\r\n\r\n        return points;\r\n    }\r\n\r\n    const updateGameState = (newLetterRevealState, newPlayerStates) => {\r\n        const newState = copyGameState({\r\n            ...gameState,\r\n            letterRevealState: newLetterRevealState,\r\n            playerStates: newPlayerStates,\r\n        });\r\n        return newState;\r\n    }\r\n\r\n    const revealLetters = (character: string) => {\r\n        const newLetterRevealState = [...gameState.letterRevealState];\r\n        const points = revealLettersPrivate(character, newLetterRevealState);\r\n\r\n        const newPlayerStates = [...gameState.playerStates];\r\n        newPlayerStates[0].points += points;\r\n        \r\n        sendGameStateToBE(updateGameState(newLetterRevealState, newPlayerStates));\r\n    }\r\n\r\n    const revealWord = (word: string) => {\r\n\r\n        const newLetterRevealState = clearLastTurnReveal([...gameState.letterRevealState]);\r\n\r\n        let idx = currentSentence.indexOf(word);\r\n        let totalPoints = 0;\r\n\r\n        while (idx >= 0) {\r\n\r\n            for (var i = idx; i < idx + word.length; i++) {\r\n                if (!gameState.letterRevealState[i] || gameState.letterRevealState[i] === LetterRevealState.UNREVEALED) {\r\n                    const points = letterPoints[currentSentence[i]];\r\n                    totalPoints += points;\r\n                    newLetterRevealState[i] = LetterRevealState.REVEALED_LAST_TURN;\r\n                }\r\n            }\r\n\r\n            idx = currentSentence.indexOf(word, idx+word.length);\r\n        }\r\n\r\n        const newPlayerStates = [...gameState.playerStates];\r\n        newPlayerStates[0].points += totalPoints;\r\n        \r\n        sendGameStateToBE(updateGameState(newLetterRevealState, newPlayerStates));\r\n    };\r\n\r\n    const isSpecialLetter = (letter: string) => {\r\n        return !letter.match(/[A-Z]/g)\r\n    };\r\n\r\n    const sendGameStateToBE = async (state: GameState) => {\r\n        const resp = await axios.post(BE_URL + \"/game\", { game: state });\r\n        setGameState(resp.data);\r\n    };\r\n\r\n    const fetchGameStateFromBe = useCallback(() => {\r\n        axios.get(BE_URL + \"/game\").then((resp) => {\r\n            setGameState(resp.data);\r\n        })\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n\r\n        let client = new W3CWebSocket(BE_WS_URL);\r\n\r\n        client.onopen = () => {};\r\n\r\n        client.onmessage = (message) => {\r\n\r\n            const newGameState = JSON.parse(message.data as string);\r\n            if (newGameState)\r\n                setGameState(newGameState);\r\n        };\r\n\r\n        fetchGameStateFromBe();\r\n    }, [fetchGameStateFromBe]);\r\n\r\n    return {\r\n        getNextSentence: getNextSentence,\r\n        isLetterAtIndexRevealed: isLetterAtIndexRevealed,\r\n        revealLetters: revealLetters,\r\n        gameState: gameState,\r\n        currentSentence: currentSentence,\r\n        isSpecialLetter: isSpecialLetter,\r\n        revealWord: revealWord\r\n    };\r\n}","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport type LetterSelectComponentProps = {\r\n    revealLetters : (string) => void;\r\n    revealWord : (string) => void;\r\n};\r\n\r\nexport const LetterSelectComponent = (props : LetterSelectComponentProps) => {\r\n\r\n    const [ selectedWord, setSelectedWord ] = useState(\"\");\r\n\r\n    const handleWordInputValueChange = (event) => {\r\n        setSelectedWord(event.target.value.toUpperCase());\r\n    }\r\n\r\n    const handleQuessWordClicked = () => {\r\n        if( selectedWord !== '' ) {\r\n            props.revealWord(selectedWord);\r\n            setSelectedWord('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <LetterSelectMainDiv>\r\n            <HorizontalLayout>\r\n                <WordInput onInput={ handleWordInputValueChange } value={selectedWord}></WordInput>\r\n                <Button onClick={ handleQuessWordClicked }>Quess</Button>\r\n            </HorizontalLayout>\r\n        </LetterSelectMainDiv>\r\n    );\r\n};\r\n\r\nconst HorizontalLayout = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n`;\r\n\r\nconst LetterSelectMainDiv = styled.div`\r\n    background: #c3bbbb;\r\n    display: flex;\r\n    flex-direction: column;\r\n`;\r\n\r\nconst WordInput = styled.textarea`\r\n    height: 60px;\r\n`;\r\n\r\nconst Button = styled.button`\r\n    height: 60px;\r\n`;","import { useEffect } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport type LetterProps = {\r\n    letter : string;\r\n    isLastRevealed: boolean;\r\n    isRevealed: boolean;\r\n};\r\n\r\nlet idCounter = 0;\r\n\r\nexport const LetterTileComponent = (props : LetterProps) => {\r\n\r\n    let borderstyle = props.isLastRevealed ? {border: \"2px solid #12ff45\"} : {};\r\n    const style = { ...borderstyle, background: props.letter === '' ? \"yellow\" : \"white\" };\r\n\r\n    return (\r\n        <div style={ style } className={\"letterTile\"} >\r\n            {props.letter}\r\n        </div>\r\n    );\r\n};","import React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useCallback } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport type PlayerInfoProps = {\r\n  isActive: boolean,\r\n  name: string\r\n  points: number;\r\n}\r\n\r\nexport const PlayerInfo = (props: PlayerInfoProps) => {\r\n\r\n  const [points, setPoints] = useState(0);\r\n  const [newPoints, setNewPoints] = useState(0);\r\n\r\n  useEffect( () => {\r\n    setPoints(props.points);\r\n  },[props.points]);\r\n\r\n  const handlePointsChanged = (change: number) => {\r\n    setNewPoints(change + newPoints);\r\n    //props.pointsUpdated(props.name, points);\r\n  };\r\n\r\n  return (\r\n    <FlexDivRow>\r\n      <PlayerContainer>\r\n        <PlayerNameDiv>{props.name}</PlayerNameDiv>\r\n        <div>{points + \"pts\"}</div>\r\n      </PlayerContainer>\r\n      <NewPointsDiv>{newPoints}</NewPointsDiv>\r\n    </FlexDivRow>\r\n  )\r\n}\r\n\r\nconst SendPointsButton = styled.button`\r\n  font-weight: bold;\r\n`;\r\n\r\nconst PlayerNameDiv = styled.div`\r\n  font-weight: bold;\r\n  text-decoration: underline;\r\n  color: #2e4289;\r\n`;\r\n\r\nconst NewPointsDiv = styled.div`\r\nbackground-color: #636a3f;\r\n    padding-top: 20px;\r\n    padding-left: 5px;\r\n    padding-right: 13px;\r\n    border: 1px;\r\n    width: 10px;\r\n    border-style: inset;\r\n    border-color: #eef1e3;\r\n    border-top-left-radius: 2px;\r\n    border-bottom-left-radius: 2px;\r\n    height: 37px;\r\n    margin-top: 2px;\r\n    border-style: inset;\r\n`;\r\n\r\nconst PlayerContainer = styled.div`\r\n      padding: 10px;  \r\n      min-width: 57px;\r\n      padding-left: 15px;\r\n      display: flex;\r\n      flex-direction: column;\r\n      background-color: #636a3f;\r\n    & > div {\r\n      display: inline-block;\r\n    }\r\n    `;\r\n\r\nconst PointButton = styled.button`\r\n      height: 100%;\r\n      background-color: #eef1e3;\r\n    `;\r\n\r\nconst FlexDivRow = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    padding: 10px;\r\n    border-top: 1px solid white;\r\n    border-top-style: inset;\r\n    `;\r\n\r\nconst FlexDivCol = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    `;","import React, { useCallback, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { LetterRevealState } from '../types/types';\r\nimport { useGameState } from '../util/GameStateProvider2';\r\nimport { LetterSelectComponent } from './LetterSelectComponent';\r\nimport { LetterTileComponent } from './LetterTileComponent';\r\nimport { PlayerInfo } from './PlayerInfoComponent';\r\n\r\nexport const WordBoardComponent = () => {\r\n\r\n    const { \r\n        getNextSentence,\r\n        isLetterAtIndexRevealed,\r\n        currentSentence,\r\n        gameState,\r\n        revealLetters,\r\n        isSpecialLetter,\r\n        revealWord\r\n     } = useGameState();\r\n\r\n    const getLetterAt = useCallback( (idx : number) => {\r\n\r\n        const letter = currentSentence[idx];\r\n        if( isSpecialLetter(letter) )\r\n            return currentSentence[idx];\r\n\r\n        return isLetterAtIndexRevealed(idx) ? letter : '';\r\n    },[isLetterAtIndexRevealed, currentSentence])\r\n\r\n    const getIsLastRevealed = useCallback( (idx: number) => {\r\n        return gameState.letterRevealState[idx] === LetterRevealState.REVEALED_LAST_TURN;\r\n    },[gameState]);\r\n\r\n    return (\r\n        <MainDiv>\r\n            <LetterContainer>\r\n            {\r\n                Array.from(currentSentence).map( (character, idx) => (\r\n                    <LetterTileComponent \r\n                    letter={getLetterAt(idx)}\r\n                    isLastRevealed={getIsLastRevealed(idx)}\r\n                    isRevealed={isLetterAtIndexRevealed(idx)}\r\n                    ></LetterTileComponent>\r\n                ))\r\n            }\r\n            </LetterContainer>\r\n            <LetterSelectComponent revealLetters={revealLetters} revealWord={revealWord}/>\r\n            {\r\n                gameState.playerStates.map( playerState => (\r\n                    <PlayerInfo isActive={false} name={playerState.name} points={playerState.points} ></PlayerInfo>   \r\n                ))\r\n            }\r\n        </MainDiv>\r\n    );\r\n}\r\n\r\nconst LetterContainer = styled.div`\r\n    width: 80%;\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n}\r\n`;\r\n\r\nconst MainDiv = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    align-content: center;\r\n    align-items: center;\r\n`;","import './App.css';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport styled from 'styled-components';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { isLoggedIn, login } from './util/utils';\r\nimport axios from 'axios';\r\nimport { BE_URL } from './state';\r\nimport { toast } from 'react-toastify';\r\nimport { WordBoardComponent } from './components/WordBoardComponent';\r\n\r\nfunction App() {\r\n\r\n  const [isUserLoggedIn, setIsUserLoggedIn] = useState(false);\r\n\r\n  useEffect(() => {\r\n\r\n    if (document.cookie === '')\r\n      setIsUserLoggedIn(false);\r\n\r\n    axios.get(BE_URL + \"/isLoggedIn?username=\" + document.cookie).then((response) => {\r\n      if (response.status == 200) {\r\n        const data = response.data;\r\n        console.log(\"IS logged in user: \"+document.cookie);\r\n        console.log(\"GOT RESP: \"+data.isLoggedIn);\r\n        setIsUserLoggedIn(data.isLoggedIn);\r\n      }\r\n      else\r\n        setIsUserLoggedIn(false);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/\">\r\n          {isUserLoggedIn ?\r\n            <div></div> :\r\n            <WordBoardComponent></WordBoardComponent>}\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n\r\n  );\r\n};\r\n\r\nconst PlayerSelectView = () => {\r\n  const usernameRef = useRef(null);\r\n\r\n  const logUserIn = () => {\r\n\r\n    if (!usernameRef || !usernameRef.current)\r\n      return;\r\n\r\n    const username = (usernameRef.current as HTMLInputElement).value;\r\n    if (username && username !== '') {\r\n      login(username)\r\n    }\r\n  };\r\n\r\n  return (\r\n    <LoginMainDiv>\r\n      <PlayerSelectContainer>\r\n        <TitleH2>Insert username</TitleH2>\r\n        <TextField ref={usernameRef} placeholder={\"Username\"}></TextField>\r\n        <Button onClick={() => logUserIn()}>Enter</Button>\r\n      </PlayerSelectContainer>\r\n    </LoginMainDiv>\r\n  );\r\n\r\n}\r\n\r\nconst LoginMainDiv = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\nalign-items: center;\r\n`;\r\n\r\nconst TitleH2 = styled.h2`\r\n  font-weight: normal;\r\n  margin-bottom: 25px;\r\n    margin-top: 2px;\r\n`;\r\n\r\nconst Button = styled.button`\r\npadding: 15px;\r\n    margin-top: 20px;\r\n    width: 150px;\r\n    border: 1px solid #386383;\r\n    border-radius: 10px;\r\n    background: #0e1d21;\r\n    color: white;\r\n    font-size: 14px;\r\n}\r\n`;\r\n\r\nconst TextField = styled.input`\r\n    padding: 14px;\r\n    border: 1px solid #386383;\r\n    border-radius: 3px;\r\n    background: #0e1d21;\r\n    color: white;\r\n    text-align: center;\r\n`;\r\n\r\nconst TitleText = styled.p`\r\nfont-size: 60px;\r\ncolor: #386383;\r\n`;\r\n\r\nconst PlayerLink = styled.a`\r\n    font-size: 20px;\r\n`;\r\n\r\nconst PlayerSelectContainer = styled.div`\r\n    display: flex;\r\n    color: white;\r\n    flex-direction: column;\r\n    align-content: center;\r\n    align-items: center;\r\n    background: #cf181f;\r\n    padding: 14px;\r\n    border-radius: 6px;\r\n    width: 301px;\r\n    border: 1px solid #ffffff7a;\r\n  `;\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n\r\n/*\r\nTASKS\r\n\r\nIteration 1 (DONE)\r\n\r\n-Draw upto 7 on end turn (DONE)\r\n-Prevent manual draw (DONE)\r\n-Tile disappear? (id issues related? DONE?)\r\n\r\n2nd Iteration\r\n\r\n*Add new game button somewhere (DONE)\r\n\r\n*Improve login screen (toasts, visuals etc.)\r\n*more visual improvements (Icons, logos, etc.)\r\n*Performance enhancements: Add useCallbacks etc\r\n*Get rid of warnings pt2\r\n*Env file for IP setup\r\n*/\r\n"],"sourceRoot":""}